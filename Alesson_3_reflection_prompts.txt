1. Q. When would you want to use a remote repository rather than keeping all your work local?
   A. You would want to use a remote repository rather than keeping all your work local when you want to share your code
   with others.  Its also a good way to backup your code in case your machine fails.
2. Q. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
   A. You might want to pull changes manually because you want to control which changes get introduced into your local repository.
3. Q. Describe the differences between forks, clones, and branches. When would you use one instead of another?
   A. The difference between forks, clones and branches are:
      - A Fork is a clone that GitHub makes on their own machines.  It does not invlove any local repositories.  Once a fork is made you can
      clone it anywhere.
      - A clone is an exact copy of the commit history of a repository.  This can be done local-local, or remote - local.
      - Branch is a label which help indicates when a certain set of changes has occured.
4. Q. What is the benefit of having a copy of the last known state of the remote stored locally?
   A. This makes it easier to merge remote changes into your local repository and vice versus.
5. Q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
   A. To collaborate without using Git or Github, there would need to be alot of verbal communication or maybe via email.  It would be harder to keep
   Track of all changes that occur during the collaboration.  I don't think much would be easier.
6. Q. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
   A. You want to make a change in a separate branch rather than directly in master when you would like to collaborate with others and not touch the master branch until your changes are vetted / tested.